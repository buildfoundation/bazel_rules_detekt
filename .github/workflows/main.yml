name: CI

on:
  pull_request:
  push:
    branches:
      - "master"

env:
  VERSION_BAZELISK: "1.7.4"
  VERSION_BUILDIFIER: "3.5.0"

jobs:
  buildifier:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the source code"
        uses: actions/checkout@v2.3.4

      - name: "Download Buildifier"
        run: |
          curl --location --fail "https://github.com/bazelbuild/buildtools/releases/download/${VERSION_BUILDIFIER}/buildifier" --output /tmp/buildifier
          chmod +x /tmp/buildifier && echo "/tmp/" >> $GITHUB_PATH

      - name: "Lint Starlark files"
        run: buildifier -mode check -lint warn -r .

      - name: "Lint Shell files"
        run: for file in $(find . -type f -name "*.sh"); do shellcheck $file; done;

  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the source code"
        uses: actions/checkout@v2.3.4

      - name: "Install JDK"
        uses: actions/setup-java@v1.4.3
        with:
          java-version: "11.0.5"

      - name: "Download Bazelisk"
        run: |
          curl --location --fail "https://github.com/bazelbuild/bazelisk/releases/download/v${VERSION_BAZELISK}/bazelisk-linux-amd64" --output /tmp/bazel
          chmod +x /tmp/bazel && echo "/tmp/" >> $GITHUB_PATH

      - name: "Configure Bazel"
        run: cp .github/workflows/.bazelrc .

      - name: "Configure cache"
        uses: actions/cache@v2.1.3
        with:
          path: .cache
          key: ${{ runner.os }}-bazel-${{ hashFiles('WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      - name: "Fetch"
        run: bazel fetch //detekt/wrapper:bin

      - name: "Build"
        run: bazel build //detekt/wrapper:bin

      - name: "Unit tests"
        run: bazel test //detekt/wrapper:tests

      - name: "Analysis tests"
        run: bazel test //tests/analysis:tests

      - name: "Integration tests"
        run: bash tests/integration/suite.sh
